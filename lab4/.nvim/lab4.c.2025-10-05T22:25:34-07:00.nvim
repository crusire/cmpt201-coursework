#define _POSIX_C_SOURCE 200809L
#define _DEFAULT_SOURCE

#include <stdint.h>
#include <stdio.h>
#include <unistd.h>

struct header {
  uint64_t size;
  struct header *next;
};

void print_out(char *format, void *data, size_t data_size) {
  char buf[256];
  ssize_t len = snprintf(buf, 256, format,
                         data_size == sizeof(uint64_t) ? *(uint64_t *)data
                                                       : *(void **)data);
  if (len < 0) {
    perror("snprintf failed");
  }
  write(STDOUT_FILENO, buf, len);
}

int main() {
  intptr_t increment = 256;

  void *new_heap_start = sbrk(increment);
  struct header *first_block = (struct header *)new_heap_start;
  first_block->size = 128;
  first_block->next = NULL;

  print_out("first block:     %p\n", first_block, sizeof(first_block);

  new_heap_start = new_heap_start + 128;
  struct header *second_block = (struct header *)new_heap_start;
  second_block->size = 128;
  second_block->next = first_block;

}
